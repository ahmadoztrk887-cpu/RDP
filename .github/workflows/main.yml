name: Windows RDP with SSHX

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup RDP
        run: |
          $Password = ConvertTo-SecureString -AsPlainText "P@ssw0rd123!" -Force
          Set-LocalUser -Name "runneradmin" -Password $Password
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        shell: pwsh

      - name: Install and Run SSHX
        run: |
          Write-Host "==================================="
          Write-Host "Installing SSHX..."
          Write-Host "===================================`n"
          
          # Download and install using the official installer
          Invoke-WebRequest -Uri "https://sshx.io/get" -OutFile "$env:TEMP\install-sshx.ps1"
          
          # Run the installer
          & "$env:TEMP\install-sshx.ps1"
          
          # Add to PATH if not already there
          $sshxPath = "$env:USERPROFILE\.sshx\bin"
          if (Test-Path $sshxPath) {
              $env:PATH += ";$sshxPath"
          }
          
          Write-Host "`n==================================="
          Write-Host "Starting SSHX Session..."
          Write-Host "===================================`n"
          
          # Start SSHX in background and capture output
          Start-Job -Name "SSHXSession" -ScriptBlock {
              sshx 2>&1 | Tee-Object -FilePath "$env:TEMP\sshx_output.txt"
          }
          
          # Wait for SSHX to initialize
          Start-Sleep -Seconds 5
          
          # Display the connection URL
          if (Test-Path "$env:TEMP\sshx_output.txt") {
              Get-Content "$env:TEMP\sshx_output.txt"
          }
        shell: pwsh

      - name: Display Connection Info
        run: |
          Write-Host "`n==================================="
          Write-Host "CONNECTION INFORMATION"
          Write-Host "==================================="
          Write-Host "RDP Username: runneradmin"
          Write-Host "RDP Password: P@ssw0rd123!"
          Write-Host "`nSSHX Connection URL:"
          
          Start-Sleep -Seconds 3
          
          if (Test-Path "$env:TEMP\sshx_output.txt") {
              Get-Content "$env:TEMP\sshx_output.txt"
          }
          
          Write-Host "===================================`n"
        shell: pwsh

      - name: Keep Session Alive
        run: |
          Write-Host "Session is now active. Keeping alive..."
          Write-Host "Press Cancel Workflow to terminate`n"
          
          $iteration = 0
          while ($true) {
              $iteration++
              
              # Check if SSHX job is still running
              $job = Get-Job -Name "SSHXSession" -ErrorAction SilentlyContinue
              if ($job) {
                  $jobState = $job.State
                  Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Iteration $iteration - SSHX Status: $jobState"
                  
                  # Get any new output from SSHX
                  $output = Receive-Job -Name "SSHXSession" -ErrorAction SilentlyContinue
                  if ($output) {
                      Write-Host "SSHX Output: $output"
                  }
              } else {
                  Write-Host "[$(Get-Date -Format 'HH:mm:ss')] Warning: SSHX job not found, restarting..."
                  Start-Job -Name "SSHXSession" -ScriptBlock {
                      sshx 2>&1 | Tee-Object -FilePath "$env:TEMP\sshx_output.txt"
                  }
              }
              
              Start-Sleep -Seconds 60
          }
        shell: pwsh
