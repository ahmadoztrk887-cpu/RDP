name: SSHX

on:
  workflow_dispatch:

jobs:
  sshx-connection:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Create User Account
        run: |
          $password = "password123"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "admin" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "admin"
          
          Write-Host "User created successfully"
          Write-Host "Username: admin"
          Write-Host "Password: password123"

      - name: Install and Setup SSHX
        run: |
          # Download SSHX for Windows
          $sshxUrl = "https://github.com/ekzhang/sshx/releases/latest/download/sshx-x86_64-pc-windows-msvc.zip"
          $zipPath = "$env:TEMP\sshx.zip"
          $extractPath = "$env:TEMP\sshx"
          
          Write-Host "Downloading SSHX..."
          Invoke-WebRequest -Uri $sshxUrl -OutFile $zipPath
          
          Write-Host "Extracting SSHX..."
          Expand-Archive -Path $zipPath -DestinationPath $extractPath -Force
          
          # Change to extract directory
          cd $extractPath
          
          Write-Host "`n==================================="
          Write-Host "Starting SSHX service..."
          Write-Host "===================================`n"
          
          # Run SSHX and capture output
          .\sshx.exe

      - name: Alternative SSHX Setup (using curl)
        if: failure()
        run: |
          # Try alternative method with curl
          Write-Host "Trying alternative SSHX setup..."
          
          # Install curl if not available
          if (-not (Get-Command curl -ErrorAction SilentlyContinue)) {
              Write-Host "Installing curl..."
              choco install curl -y
          }
          
          # Run SSHX using curl
          curl -sSf https://sshx.io/get | sh -s run

      - name: Keep Session Active
        run: |
          Write-Host "`n=== SSHX SESSION ACTIVE ==="
          Write-Host "Username: admin"
          Write-Host "Password: password123"
          Write-Host "Check above for SSHX connection URL"
          Write-Host "===========================`n"
          
          # Keep the session active
          while ($true) {
              Write-Host "[$(Get-Date)] Session Active - Cancel workflow to terminate"
              Start-Sleep -Seconds 300
          }
